<?php

/**
 * –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è Aitu Apps API –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ push-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
 * 
 * –≠—Ç–æ—Ç –ø—Ä–∏–º–µ—Ä –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π:
 * 1. –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
 * 2. –ú–∞—Å—Å–æ–≤–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞
 * 3. –ì—Ä—É–ø–ø–æ–≤—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
 * 4. Broadcast —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
 * 5. –û—Ç–ª–æ–∂–µ–Ω–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞
 * 6. –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
 */

require_once __DIR__ . '/../vendor/autoload.php';

use MadArlan\AituMessenger\AituAppsClient;
use MadArlan\AituMessenger\Exceptions\AituApiException;

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
$config = [
    'app_id' => 'your_app_id',
    'app_secret' => 'your_app_secret'
];

// –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞
$client = new AituAppsClient($config['app_id'], $config['app_secret']);

// –û–ø—Ä–µ–¥–µ–ª—è–µ–º –¥–µ–π—Å—Ç–≤–∏–µ
$action = $_GET['action'] ?? 'menu';

echo "<!DOCTYPE html>
<html>
<head>
    <meta charset='UTF-8'>
    <title>Aitu Apps Notifications Example</title>
    <style>
        body { font-family: Arial, sans-serif; max-width: 1000px; margin: 0 auto; padding: 20px; }
        .menu { background: #f8f9fa; padding: 15px; border-radius: 5px; margin-bottom: 20px; }
        .menu a { margin-right: 15px; padding: 8px 15px; background: #007bff; color: white; text-decoration: none; border-radius: 3px; }
        .menu a:hover { background: #0056b3; }
        .form-group { margin-bottom: 15px; }
        .form-group label { display: block; margin-bottom: 5px; font-weight: bold; }
        .form-group input, .form-group textarea, .form-group select { width: 100%; padding: 8px; border: 1px solid #ddd; border-radius: 3px; }
        .btn { padding: 10px 20px; background: #28a745; color: white; border: none; border-radius: 3px; cursor: pointer; }
        .btn:hover { background: #218838; }
        .result { background: #d4edda; border: 1px solid #c3e6cb; padding: 15px; border-radius: 5px; margin-top: 20px; }
        .error { background: #f8d7da; border: 1px solid #f5c6cb; padding: 15px; border-radius: 5px; margin-top: 20px; }
        pre { background: #f8f9fa; padding: 10px; border-radius: 3px; overflow-x: auto; }
    </style>
</head>
<body>";

// –ú–µ–Ω—é –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
echo "<div class='menu'>
    <a href='?action=menu'>üè† –ì–ª–∞–≤–Ω–∞—è</a>
    <a href='?action=targeted'>üë§ –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–µ</a>
    <a href='?action=multiple'>üë• –ú–∞—Å—Å–æ–≤–æ–µ</a>
    <a href='?action=group'>üè¢ –ì—Ä—É–ø–ø–æ–≤–æ–µ</a>
    <a href='?action=broadcast'>üì¢ –í—Å–µ–º</a>
    <a href='?action=scheduled'>‚è∞ –û—Ç–ª–æ–∂–µ–Ω–Ω–æ–µ</a>
    <a href='?action=stats'>üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</a>
</div>";

switch ($action) {
    case 'menu':
        showMenu();
        break;
        
    case 'targeted':
        handleTargetedNotification($client);
        break;
        
    case 'multiple':
        handleMultipleNotifications($client);
        break;
        
    case 'group':
        handleGroupNotification($client);
        break;
        
    case 'broadcast':
        handleBroadcastNotification($client);
        break;
        
    case 'scheduled':
        handleScheduledNotification($client);
        break;
        
    case 'stats':
        handleNotificationStats($client);
        break;
        
    default:
        showMenu();
}

echo "</body></html>";

/**
 * –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
 */
function showMenu(): void
{
    echo "<h1>üöÄ Aitu Apps Notifications Example</h1>";
    echo "<p>–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏:</p>";
    
    echo "<div style='display: grid; grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); gap: 20px; margin-top: 30px;'>";
    
    $options = [
        'targeted' => ['üë§ –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ', '–û—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é'],
        'multiple' => ['üë• –ú–∞—Å—Å–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ', '–û—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –Ω–µ—Å–∫–æ–ª—å–∫–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º'],
        'group' => ['üè¢ –ì—Ä—É–ø–ø–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ', '–û—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞–º –≥—Ä—É–ø–ø—ã'],
        'broadcast' => ['üì¢ Broadcast —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ', '–û—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º'],
        'scheduled' => ['‚è∞ –û—Ç–ª–æ–∂–µ–Ω–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ', '–ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –æ—Ç–ø—Ä–∞–≤–∫—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è'],
        'stats' => ['üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π', '–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π']
    ];
    
    foreach ($options as $action => $info) {
        echo "<div style='border: 1px solid #ddd; padding: 20px; border-radius: 5px;'>";
        echo "<h3>{$info[0]}</h3>";
        echo "<p>{$info[1]}</p>";
        echo "<a href='?action={$action}' class='btn'>–ü–µ—Ä–µ–π—Ç–∏</a>";
        echo "</div>";
    }
    
    echo "</div>";
}

/**
 * –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
 */
function handleTargetedNotification(AituAppsClient $client): void
{
    echo "<h1>üë§ –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ</h1>";
    
    if ($_SERVER['REQUEST_METHOD'] === 'POST') {
        try {
            $notification = [
                'title' => $_POST['title'],
                'body' => $_POST['body'],
                'user_id' => $_POST['user_id']
            ];
            
            // –î–æ–±–∞–≤–ª—è–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –µ—Å–ª–∏ —É–∫–∞–∑–∞–Ω—ã
            if (!empty($_POST['icon'])) {
                $notification['icon'] = $_POST['icon'];
            }
            
            if (!empty($_POST['image'])) {
                $notification['image'] = $_POST['image'];
            }
            
            if (!empty($_POST['click_action'])) {
                $notification['click_action'] = $_POST['click_action'];
            }
            
            if (!empty($_POST['custom_data'])) {
                $notification['data'] = json_decode($_POST['custom_data'], true) ?: [];
            }
            
            $response = $client->sendTargetedNotification($notification);
            
            if ($response->isSuccessful()) {
                echo "<div class='result'>";
                echo "<h3>‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!</h3>";
                echo "<p><strong>ID —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:</strong> " . $response->getData('notification_id') . "</p>";
                echo "<pre>" . json_encode($response->getData(), JSON_PRETTY_PRINT | JSON_UNESCAPED_UNICODE) . "</pre>";
                echo "</div>";
            } else {
                $error = $response->getError();
                echo "<div class='error'>";
                echo "<h3>‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏</h3>";
                echo "<p><strong>–°–æ–æ–±—â–µ–Ω–∏–µ:</strong> {$error['message']}</p>";
                echo "<p><strong>–ö–æ–¥:</strong> {$error['code']}</p>";
                echo "</div>";
            }
            
        } catch (AituApiException $e) {
            echo "<div class='error'>";
            echo "<h3>‚ùå –û—à–∏–±–∫–∞ API</h3>";
            echo "<p><strong>–°–æ–æ–±—â–µ–Ω–∏–µ:</strong> {$e->getMessage()}</p>";
            echo "<p><strong>–ö–æ–¥:</strong> {$e->getCode()}</p>";
            echo "</div>";
        }
    }
    
    // –§–æ—Ä–º–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏
    echo "<form method='POST'>";
    
    echo "<div class='form-group'>";
    echo "<label>ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (UUID):</label>";
    echo "<input type='text' name='user_id' required placeholder='xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx' value='" . ($_POST['user_id'] ?? '') . "'>";
    echo "</div>";
    
    echo "<div class='form-group'>";
    echo "<label>–ó–∞–≥–æ–ª–æ–≤–æ–∫:</label>";
    echo "<input type='text' name='title' required placeholder='–ó–∞–≥–æ–ª–æ–≤–æ–∫ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è' value='" . ($_POST['title'] ?? '') . "'>";
    echo "</div>";
    
    echo "<div class='form-group'>";
    echo "<label>–¢–µ–∫—Å—Ç:</label>";
    echo "<textarea name='body' required placeholder='–¢–µ–∫—Å—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è'>" . ($_POST['body'] ?? '') . "</textarea>";
    echo "</div>";
    
    echo "<div class='form-group'>";
    echo "<label>–ò–∫–æ–Ω–∫–∞ (URL, –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ):</label>";
    echo "<input type='url' name='icon' placeholder='https://example.com/icon.png' value='" . ($_POST['icon'] ?? '') . "'>";
    echo "</div>";
    
    echo "<div class='form-group'>";
    echo "<label>–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ (URL, –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ):</label>";
    echo "<input type='url' name='image' placeholder='https://example.com/image.jpg' value='" . ($_POST['image'] ?? '') . "'>";
    echo "</div>";
    
    echo "<div class='form-group'>";
    echo "<label>–î–µ–π—Å—Ç–≤–∏–µ –ø—Ä–∏ –∫–ª–∏–∫–µ (URL, –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ):</label>";
    echo "<input type='url' name='click_action' placeholder='https://example.com/action' value='" . ($_POST['click_action'] ?? '') . "'>";
    echo "</div>";
    
    echo "<div class='form-group'>";
    echo "<label>–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ (JSON, –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ):</label>";
    echo "<textarea name='custom_data' placeholder='{\"key\": \"value\", \"order_id\": 123}'>" . ($_POST['custom_data'] ?? '') . "</textarea>";
    echo "</div>";
    
    echo "<button type='submit' class='btn'>üì§ –û—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ</button>";
    echo "</form>";
}

/**
 * –ú–∞—Å—Å–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
 */
function handleMultipleNotifications(AituAppsClient $client): void
{
    echo "<h1>üë• –ú–∞—Å—Å–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ</h1>";
    
    if ($_SERVER['REQUEST_METHOD'] === 'POST') {
        try {
            $notification = $client->createNotification(
                $_POST['title'],
                $_POST['body']
            );
            
            // –ü–∞—Ä—Å–∏–º —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
            $userIds = array_filter(array_map('trim', explode("\n", $_POST['user_ids'])));
            
            if (empty($userIds)) {
                throw new Exception("–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º");
            }
            
            $response = $client->sendMultipleNotifications($notification, $userIds);
            
            if ($response->isSuccessful()) {
                echo "<div class='result'>";
                echo "<h3>‚úÖ –ú–∞—Å—Å–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!</h3>";
                echo "<p><strong>–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º:</strong> " . count($userIds) . "</p>";
                echo "<pre>" . json_encode($response->getData(), JSON_PRETTY_PRINT | JSON_UNESCAPED_UNICODE) . "</pre>";
                echo "</div>";
            } else {
                $error = $response->getError();
                echo "<div class='error'>";
                echo "<h3>‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏</h3>";
                echo "<p><strong>–°–æ–æ–±—â–µ–Ω–∏–µ:</strong> {$error['message']}</p>";
                echo "</div>";
            }
            
        } catch (Exception $e) {
            echo "<div class='error'>";
            echo "<h3>‚ùå –û—à–∏–±–∫–∞</h3>";
            echo "<p><strong>–°–æ–æ–±—â–µ–Ω–∏–µ:</strong> {$e->getMessage()}</p>";
            echo "</div>";
        }
    }
    
    // –§–æ—Ä–º–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏
    echo "<form method='POST'>";
    
    echo "<div class='form-group'>";
    echo "<label>–ó–∞–≥–æ–ª–æ–≤–æ–∫:</label>";
    echo "<input type='text' name='title' required placeholder='–ó–∞–≥–æ–ª–æ–≤–æ–∫ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è' value='" . ($_POST['title'] ?? '') . "'>";
    echo "</div>";
    
    echo "<div class='form-group'>";
    echo "<label>–¢–µ–∫—Å—Ç:</label>";
    echo "<textarea name='body' required placeholder='–¢–µ–∫—Å—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è'>" . ($_POST['body'] ?? '') . "</textarea>";
    echo "</div>";
    
    echo "<div class='form-group'>";
    echo "<label>ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–ø–æ –æ–¥–Ω–æ–º—É –Ω–∞ —Å—Ç—Ä–æ–∫—É):</label>";
    echo "<textarea name='user_ids' required placeholder='xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\nyyyyyyyy-yyyy-yyyy-yyyy-yyyyyyyyyyyy' rows='5'>" . ($_POST['user_ids'] ?? '') . "</textarea>";
    echo "</div>";
    
    echo "<button type='submit' class='btn'>üì§ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –º–∞—Å—Å–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ</button>";
    echo "</form>";
}

/**
 * –ì—Ä—É–ø–ø–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
 */
function handleGroupNotification(AituAppsClient $client): void
{
    echo "<h1>üè¢ –ì—Ä—É–ø–ø–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ</h1>";
    
    if ($_SERVER['REQUEST_METHOD'] === 'POST') {
        try {
            $notification = $client->createNotification(
                $_POST['title'],
                $_POST['body']
            );
            
            $response = $client->sendGroupNotification($notification, $_POST['group_id']);
            
            if ($response->isSuccessful()) {
                echo "<div class='result'>";
                echo "<h3>‚úÖ –ì—Ä—É–ø–ø–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!</h3>";
                echo "<pre>" . json_encode($response->getData(), JSON_PRETTY_PRINT | JSON_UNESCAPED_UNICODE) . "</pre>";
                echo "</div>";
            } else {
                $error = $response->getError();
                echo "<div class='error'>";
                echo "<h3>‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏</h3>";
                echo "<p><strong>–°–æ–æ–±—â–µ–Ω–∏–µ:</strong> {$error['message']}</p>";
                echo "</div>";
            }
            
        } catch (Exception $e) {
            echo "<div class='error'>";
            echo "<h3>‚ùå –û—à–∏–±–∫–∞</h3>";
            echo "<p><strong>–°–æ–æ–±—â–µ–Ω–∏–µ:</strong> {$e->getMessage()}</p>";
            echo "</div>";
        }
    }
    
    // –§–æ—Ä–º–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏
    echo "<form method='POST'>";
    
    echo "<div class='form-group'>";
    echo "<label>ID –≥—Ä—É–ø–ø—ã:</label>";
    echo "<input type='text' name='group_id' required placeholder='group_id_here' value='" . ($_POST['group_id'] ?? '') . "'>";
    echo "</div>";
    
    echo "<div class='form-group'>";
    echo "<label>–ó–∞–≥–æ–ª–æ–≤–æ–∫:</label>";
    echo "<input type='text' name='title' required placeholder='–ó–∞–≥–æ–ª–æ–≤–æ–∫ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è' value='" . ($_POST['title'] ?? '') . "'>";
    echo "</div>";
    
    echo "<div class='form-group'>";
    echo "<label>–¢–µ–∫—Å—Ç:</label>";
    echo "<textarea name='body' required placeholder='–¢–µ–∫—Å—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è'>" . ($_POST['body'] ?? '') . "</textarea>";
    echo "</div>";
    
    echo "<button type='submit' class='btn'>üì§ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –≥—Ä—É–ø–ø–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ</button>";
    echo "</form>";
}

/**
 * Broadcast —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
 */
function handleBroadcastNotification(AituAppsClient $client): void
{
    echo "<h1>üì¢ Broadcast —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ</h1>";
    echo "<p><strong>‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ:</strong> –≠—Ç–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –í–°–ï–ú –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –≤–∞—à–µ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è!</p>";
    
    if ($_SERVER['REQUEST_METHOD'] === 'POST') {
        try {
            $notification = $client->createNotification(
                $_POST['title'],
                $_POST['body']
            );
            
            $response = $client->sendBroadcastNotification($notification);
            
            if ($response->isSuccessful()) {
                echo "<div class='result'>";
                echo "<h3>‚úÖ Broadcast —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!</h3>";
                echo "<pre>" . json_encode($response->getData(), JSON_PRETTY_PRINT | JSON_UNESCAPED_UNICODE) . "</pre>";
                echo "</div>";
            } else {
                $error = $response->getError();
                echo "<div class='error'>";
                echo "<h3>‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏</h3>";
                echo "<p><strong>–°–æ–æ–±—â–µ–Ω–∏–µ:</strong> {$error['message']}</p>";
                echo "</div>";
            }
            
        } catch (Exception $e) {
            echo "<div class='error'>";
            echo "<h3>‚ùå –û—à–∏–±–∫–∞</h3>";
            echo "<p><strong>–°–æ–æ–±—â–µ–Ω–∏–µ:</strong> {$e->getMessage()}</p>";
            echo "</div>";
        }
    }
    
    // –§–æ—Ä–º–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏
    echo "<form method='POST' onsubmit='return confirm(\"–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –í–°–ï–ú –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º?\");'>";
    
    echo "<div class='form-group'>";
    echo "<label>–ó–∞–≥–æ–ª–æ–≤–æ–∫:</label>";
    echo "<input type='text' name='title' required placeholder='–í–∞–∂–Ω–æ–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ' value='" . ($_POST['title'] ?? '') . "'>";
    echo "</div>";
    
    echo "<div class='form-group'>";
    echo "<label>–¢–µ–∫—Å—Ç:</label>";
    echo "<textarea name='body' required placeholder='–¢–µ–∫—Å—Ç –≤–∞–∂–Ω–æ–≥–æ –æ–±—ä—è–≤–ª–µ–Ω–∏—è –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π'>" . ($_POST['body'] ?? '') . "</textarea>";
    echo "</div>";
    
    echo "<button type='submit' class='btn' style='background: #dc3545;'>üì¢ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º</button>";
    echo "</form>";
}

/**
 * –û—Ç–ª–æ–∂–µ–Ω–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
 */
function handleScheduledNotification(AituAppsClient $client): void
{
    echo "<h1>‚è∞ –û—Ç–ª–æ–∂–µ–Ω–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ</h1>";
    
    if ($_SERVER['REQUEST_METHOD'] === 'POST') {
        try {
            $notification = $client->createNotification(
                $_POST['title'],
                $_POST['body'],
                $_POST['user_id']
            );
            
            $scheduleTime = new DateTime($_POST['schedule_time']);
            
            $response = $client->scheduleNotification($notification, $_POST['user_id'], $scheduleTime);
            
            if ($response->isSuccessful()) {
                echo "<div class='result'>";
                echo "<h3>‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ!</h3>";
                echo "<p><strong>–í—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏:</strong> {$scheduleTime->format('Y-m-d H:i:s')}</p>";
                echo "<pre>" . json_encode($response->getData(), JSON_PRETTY_PRINT | JSON_UNESCAPED_UNICODE) . "</pre>";
                echo "</div>";
            } else {
                $error = $response->getError();
                echo "<div class='error'>";
                echo "<h3>‚ùå –û—à–∏–±–∫–∞ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è</h3>";
                echo "<p><strong>–°–æ–æ–±—â–µ–Ω–∏–µ:</strong> {$error['message']}</p>";
                echo "</div>";
            }
            
        } catch (Exception $e) {
            echo "<div class='error'>";
            echo "<h3>‚ùå –û—à–∏–±–∫–∞</h3>";
            echo "<p><strong>–°–æ–æ–±—â–µ–Ω–∏–µ:</strong> {$e->getMessage()}</p>";
            echo "</div>";
        }
    }
    
    // –§–æ—Ä–º–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏
    echo "<form method='POST'>";
    
    echo "<div class='form-group'>";
    echo "<label>ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:</label>";
    echo "<input type='text' name='user_id' required placeholder='xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx' value='" . ($_POST['user_id'] ?? '') . "'>";
    echo "</div>";
    
    echo "<div class='form-group'>";
    echo "<label>–ó–∞–≥–æ–ª–æ–≤–æ–∫:</label>";
    echo "<input type='text' name='title' required placeholder='–û—Ç–ª–æ–∂–µ–Ω–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ' value='" . ($_POST['title'] ?? '') . "'>";
    echo "</div>";
    
    echo "<div class='form-group'>";
    echo "<label>–¢–µ–∫—Å—Ç:</label>";
    echo "<textarea name='body' required placeholder='–¢–µ–∫—Å—Ç –æ—Ç–ª–æ–∂–µ–Ω–Ω–æ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è'>" . ($_POST['body'] ?? '') . "</textarea>";
    echo "</div>";
    
    echo "<div class='form-group'>";
    echo "<label>–í—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏:</label>";
    $defaultTime = (new DateTime('+1 hour'))->format('Y-m-d\TH:i');
    echo "<input type='datetime-local' name='schedule_time' required value='" . ($_POST['schedule_time'] ?? $defaultTime) . "'>";
    echo "</div>";
    
    echo "<button type='submit' class='btn'>‚è∞ –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ</button>";
    echo "</form>";
}

/**
 * –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
 */
function handleNotificationStats(AituAppsClient $client): void
{
    echo "<h1>üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π</h1>";
    
    if ($_SERVER['REQUEST_METHOD'] === 'POST') {
        try {
            $notificationId = $_POST['notification_id'];
            
            // –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç—É—Å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
            $status = $client->getNotificationStatus($notificationId);
            
            // –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
            $stats = $client->getNotificationStats($notificationId);
            
            echo "<div class='result'>";
            echo "<h3>üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</h3>";
            echo "<p><strong>ID —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:</strong> {$notificationId}</p>";
            
            if ($status->isSuccessful()) {
                echo "<h4>–°—Ç–∞—Ç—É—Å:</h4>";
                echo "<pre>" . json_encode($status->getData(), JSON_PRETTY_PRINT | JSON_UNESCAPED_UNICODE) . "</pre>";
            }
            
            if ($stats->isSuccessful()) {
                echo "<h4>–î–µ—Ç–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</h4>";
                echo "<pre>" . json_encode($stats->getData(), JSON_PRETTY_PRINT | JSON_UNESCAPED_UNICODE) . "</pre>";
            }
            
            echo "</div>";
            
        } catch (Exception $e) {
            echo "<div class='error'>";
            echo "<h3>‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏</h3>";
            echo "<p><strong>–°–æ–æ–±—â–µ–Ω–∏–µ:</strong> {$e->getMessage()}</p>";
            echo "</div>";
        }
    }
    
    // –§–æ—Ä–º–∞ –∑–∞–ø—Ä–æ—Å–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    echo "<form method='POST'>";
    
    echo "<div class='form-group'>";
    echo "<label>ID —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:</label>";
    echo "<input type='text' name='notification_id' required placeholder='notification_id_from_response' value='" . ($_POST['notification_id'] ?? '') . "'>";
    echo "<small>–í–≤–µ–¥–∏—Ç–µ ID —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è, –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ</small>";
    echo "</div>";
    
    echo "<button type='submit' class='btn'>üìä –ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É</button>";
    echo "</form>";
}

?>